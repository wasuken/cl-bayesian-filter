#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:trivial-hashtable-serialize
							 :mylib
							 :cl-bayesian-filter)
						   :silent t)
  )

(defpackage :ros.script.run.3809310558
  (:use :cl))
(in-package :ros.script.run.3809310558)

(defun main (&rest argv)
  (declare (ignorable argv))
  (handler-case
	  ;; todo: calling (main ham-path spam-path filepath)y
	  (let ((help-msg (format nil
							  "~{~A~%~}"
							  "cmds:"
							  "	learning: <type> <ham-filepath> <spam-filepath> [filepath-lst...]"
							  "	scoring : <ham-filepath> <spam-filepath> <filepath>")))
		(cond ((string= (car argv) "learning")
			   (cl-bayesian-filter:learning (nth 1 argv) ;type
											(nth 2 argv) ;ham-filepath
											(nth 3 argv) ;spam-filepath
											(nthcdr 4 argv) ;filepath-lst
											)
			   (print "learned!"))
			  ((string= (car argv) "scoring")
			   (print (cl-bayesian-filter:scoring (nth 1 argv) ;ham-filepath
												  (nth 2 argv) ;spam-filepath
												  (nth 3 argv) ;filepath
												  )))
			  (t (error (format nil "Command Not Found (~A)" cmd)))))
	(error (e)
	  (format *standard-output* "~&Error: ~A~%" e)
	  (uiop:quit -1))))
;;; vim: set ft=lisp lisp:
